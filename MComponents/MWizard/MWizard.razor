
@implements IMWizard

@using System.Threading;
@using System.Threading.Tasks;

<CascadingValue TValue="MWizard" Value="this">

    @Steps

    <div class="kt-grid kt-wizard-v3 kt-wizard-v3--white" id="kt_wizard_v3" data-ktwizard-state="@GetCurrentState()">
        <div class="kt-grid__item">
            <!--begin: Form Wizard Nav -->
            <div class="kt-wizard-v3__nav">
                <div class="kt-wizard-v3__nav-items">

                    @{
                        int i = 0;
                        int visible = 1;
                        int visibleCount = mSteps.Count(s => s.IsVisible);
                    }
                    @foreach (var entry in mSteps)
                    {

                        if (entry.IsVisible)
                        {
                            string state = "pending";

                            if (i == CurrentStep)
                                state = "current";

                            int index = i; //deep copy for onclick lambda

                            bool canJump = CanJumpTo(i);

                            <div class="kt-wizard-v3__nav-item" data-ktwizard-type="step" data-ktwizard-state="@state" style="flex: 0 0 calc(100%/@visibleCount); @(!FreezeCurrentStep && canJump ? "cursor: pointer;": "cursor: default;")" @onclick="() => OnJumpToClicked(index)">
                                <div class="kt-wizard-v3__nav-body">
                                    <div class="kt-wizard-v3__nav-label">
                                        <span>@visible</span> @entry.Title
                                    </div>
                                    <div class="kt-wizard-v3__nav-bar"></div>
                                </div>
                            </div>
                            visible++;
                        }

                        i++;
                    }


                </div>
            </div>
            <!--end: Form Wizard Nav -->
        </div>

        <div class="kt-grid__item kt-grid__item--fluid kt-wizard-v3__wrapper">

            <div class="kt-form">

                @if (CurrentStep >= 0 && mSteps.Count > CurrentStep)
                {
                    <div class="kt-wizard-v3__content" data-ktwizard-type="step-content" data-ktwizard-state="current">
                        @mSteps[CurrentStep].Content
                    </div>
                }

                @if (!FreezeCurrentStep)
                {
                    <div class="kt-form__actions">
                        <MWizardPrevStep />
                        <MWizardFinishStep />
                        <MWizardNextStep />
                    </div>
                }

            </div>
        </div>
    </div>

</CascadingValue>
 